.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "GLARK" "1" "November 2012" "" ""
.
.SH "NAME"
\fBglark\fR \- Search text files for complex regular expressions
.
.SH "SYNOPSIS"
\fBglark\fR \fIoptions\fR expression \fIfile\fR \.\.\.
.
.br
.
.SH "DESCRIPTION"
Similar to \fBgrep\fR, \fBglark\fR support: Perl\-compatible regular expressions, color highlighting of matches, context around matches, complex expressions ("and" and "or") and automatic exclusion of non\-text files\. Its regular expressions should be familiar to those experienced in Perl, Python or Ruby\.
.
.SH "OPTIONS"
Options are in the categories of matching, input, output and information\.
.
.P
For each option of the type \fB\-\-option=ARG\fR, the equivalent \fB\-\-option ARG\fR can be used\.
.
.SS "INPUT"
.
.TP
\fB\-0[nnn]\fR
Use \ennn (octal) as the input record separator\. If nnn is omitted, use \'\en\en\' as the record separator, which treats paragraphs as lines\.
.
.TP
\fB\-d\fR ACTION, \fB\-\-directories\fR=ACTION
Directories are processed according to the given \fBACTION\fR, which by default is \fBread\fR\. If \fBACTION\fR is \fBrecurse\fR, each file in the directory is read and each subdirectory is recursed into (equivalent to the \fB\-r\fR option)\. If \fBACTION\fR is \fBskip\fR, directories are not read, and no message is produced\.
.
.TP
\fB\-\-binary\-files\fR=TYPE
Specify how to handle binary files, thus overriding the default behavior, which is to denote the binary files that match the expression, without displaying the match\. \fBTYPE\fR may be one of: \fBbinary\fR, the default; \fBwithout\-match\fR, which results in binary files being skipped; and \fBtext\fR, which results in the binary file being treated as text, the display of which may have bad side effects with the terminal\. Note that the default behavior has changed; this previously was to skip binary files\. The same effect may be achieved by setting \fBbinary\-files\fR to \fBwithout\-match\fR in the ~/\.glarkrc file\.
.
.TP
\fB\-\-match\-name\fR=REGEXP
Search only files with names that match the given regular expression\. As in find(1), this works on the basename of the file\. This expression can be negated and modified with \fB!\fR and \fBi\fR, such as \fB!/io\e\.[hc]$/i\fR\.
.
.TP
\fB\-\-match\-path\fR=REGEXP
Search only files with full names that match the given regular expression\. As in find(1), this works on the path of the file\.
.
.TP
\fB\-\-not\-name\fR=REGEXP
Do not search files with base names matching the given regular expression\.
.
.TP
\fB\-\-not\-path\fR=REGEXP
Do not search files with full names matching the given regular expression\.
.
.TP
\fB\-M\fR, \fB\-\-exclude\-matching\fR
Do not search files whose names match the primary expression\. This can be useful for finding external references to a file, or to a class, assuming that class names match file names
.
.TP
\fB\-r\fR, \fB\-\-recurse\fR
Recurse through directories\. Equivalent to \fB\-\-directories=read\fR\.
.
.TP
\fB\-\-split\-as\-path\fR
If a command line argument includes the path separator (such as ":"), the argument will be split by the path separator\. This functionality is useful for using environment variables as input, such as \fB$PATH\fR and \fB$CLASSPATH\fR\. which are automatically split and processed as a list of files and directories\. This option is enabled by default\.
.
.TP
\fB\-\-no\-split\-as\-path\fR
Disables splitting arguments as paths\.
.
.TP
\fB\-\-size\-limit\fR=SIZE
Limit searches to files no larger than \fBSIZE\fR bytes\. This is useful when running the \fB\-\-recurse\fR option on directories that may contain large files\.
.
.SS "MATCHING"
.
.TP
\fB\-a\fR NUM expr1 expr2, \fB\-\-and\fR NUM expr1 expr2, \fB\-\-and\fR=NUM expr1 expr2
Match both expressions, within \fBNUM\fR lines of each other\. See the \fBEXPRESSIONS\fR section for more information\.
.
.TP
\fB( expr1 \-\-and=NUM expr2 )\fR
Same as the above, using infix notation instead of prefix\.
.
.TP
\fB\-\-after\fR=NUM[%]
Restrict the search to after the given section, which represents either the number of the first line within the valid range, or the percentage of lines to be skipped\. \fB\-\-after=25%\fR means to search the "lower" 25% of each file\. \fB\-\-after=10\fR means to skip the first ten lines of each file\.
.
.TP
\fB\-b\fR NUM[%], \fB\-\-before\fR=NUM[%]
Restrict the search to before the given location, which is either the number of the last line within the valid range, or the percentage of lines to be searched\.
.
.TP
\fB\-f\fR FILE, \fB\-\-file\fR=FILE
Use the lines in the given file as expressions\. Each line consists of a regular expression\. Complex expressions are supported\.
.
.TP
\fB\-i\fR, \fB\-\-ignore\-case\fR
Match regular expressions without regard to case\. The default is case sensitive\.
.
.TP
\fB\-m\fR NUM, \fB\-\-match\-limit\fR=NUM
Output only the first \fBNUM\fR matches in each file\.
.
.TP
\fB\-a\fR NUM expr1 expr2, \fB\-\-or\fR NUM expr1 expr2, \fB\-\-or\fR=NUM expr1 expr2
Match either expressions\. See the \fBEXPRESSIONS\fR section for more information\.
.
.TP
\fB( expr1 \-\-or=NUM expr2 )\fR
Same as the above, using infix notation instead of prefix\.
.
.TP
\fB\-R\fR, \fB\-\-range\fR NUM[%],NUM[%]
Restrict the search to the given range of lines, as either line numbers or a percentage of the length of the file\.
.
.TP
\fB\-v\fR, \fB\-\-invert\-match\fR
Show lines that do not match the expression\.
.
.TP
\fB\-w\fR, \fB\-\-word\fR, \fB\-\-word\-regexp\fR
Put word boundaries around each pattern, thus matching only where the full word(s) occur in the text\. Thus, \fBglark \-w Foo\fR is the same as \fBglark \'/\ebFoo\eb/\'\fR\.
.
.TP
\fB\-x\fR, \fB\-\-line\-regexp\fR
Select only where the entire line matches the pattern(s)\.
.
.TP
\fB\-\-xor\fR expr1 expr2
Match either of the two expressions, but not both\. See the EXPRESSIONS section for more information\.
.
.TP
\fB( expr1 \-\-xor expr2 )\fR
Same as the above, using infix notation instead of prefix\.
.
.SS "OUTPUT"
.
.TP
\fB\-A\fR NUM, \fB\-\-after\-context\fR=NUM
Print \fBNUM\fR lines after a matched expression\.
.
.TP
\fB\-B NUM,\fR\-\-before\-context\fB=NUM\fR
PrintNUM` lines before a matched expression\.
.
.TP
\fB\-C\fR [NUM], \fB\-NUM\fR, \fB\-\-context[=NUM]\fR
Output \fBNUM\fR lines of context around a matched expression\. The default is no context\. If no \fBNUM\fR is given for this option, the number of lines of context is 2\.
.
.TP
\fB\-c,\fR\-\-count`
Instead of normal output, display only the number of matches in each file\.
.
.TP
\fB\-F\fR, \fB\-\-file\-color\fR=COLOR
Specify the highlight color for file names\. See the HIGHLIGHTING section for the values that can be used\.
.
.TP
\fB\-\-no\-filter\fR
Display the entire file(s)\. Useful to see highlighted matches as well as non\-matching lines\.
.
.TP
\fB\-g\fR, \fB\-\-grep\fR
Produce output like the (legacy) grep default: file names, no line numbers, and a single line of the match, which will be the first line for matches that span multiple lines\. If the EMACS environment variable is set, this value is set to true\.
.
.TP
\fB\-h\fR, \fB\-\-no\-filename\fR
Do not display the names of the files that matched\.
.
.TP
\fB\-H\fR, \fB\-\-with\-filename\fR
Display the names of the files that matched\. This is the default behavior\.
.
.TP
\fB\-l\fR, \fB\-\-files\-with\-matches\fR
Print only the names of the file that matched the expression\.
.
.TP
\fB\-L\fR, \fB\-\-files\-without\-match\fR
Print only the names of the file that did \fBnot\fR match the expression\.
.
.TP
\fB\-\-label\fR=NAME
Use \fBNAME\fR as the output file name\. This is useful when reading from standard input, such as glark being piped from an archive listing (tar tvf or jar tvf)\.
.
.TP
\fB\-n\fR, \fB\-\-line\-number\fR
Display the line numbers\. This is the default behavior\.
.
.TP
\fB\-N\fR, `\-\-no\-line\-number
Do not display the line numbers\.
.
.TP
\fB\-\-line\-number\-color\fR=COLOR
Specify the highlight color for line numbers\. This defaults to none (no highlighting)\. See the HIGHLIGHTING section for more information\.
.
.TP
\fB\-T\fR, \fB\-\-text\-color\fR=COLOR
Specify the highlight color for text\. See the HIGHLIGHTING section for more information\.
.
.TP
\fB\-u\fR, \fB\-\-highlight\fR=FORMAT
Enable highlighting\. This is the default behavior\. Format is "single" (one color) or "multi" (different color per regular expression)\. See the HIGHLIGHTING section for more information\.
.
.TP
\fB\-U\fR, \fB\-\-no\-highlight\fR
Disable highlighting\.
.
.TP
\fB\-y\fR, \fB\-\-extract\-matches\fR
Display only the region that matched, not the entire line\. If the expression contains "backreferences" (i\.e\., expressions bounded by "( \.\.\. )"), then only the portion captured will be displayed, not the entire line\. This option is useful with \fB\-g\fR, which eliminates the default highlighting and display of file names\.
.
.TP
\fB\-Z\fR, \fB\-\-null\fR
When in \fB\-l\fR mode, write file names followed by the ASCII NUL character (\'><\') instead of \'\en\'\. This is line \fBfind \.\.\. \-print0\fR, for piping into another command\.
.
.SS "INFORMATION"
.
.TP
\fB\-?\fR, \fB\-\-help\fR
Display the help message\.
.
.TP
\fB\-\-config\fR
Display the settings glark is using, and exit\. Since this is run after configuration files are read, this may be useful for determining values of configuration parameters\.
.
.TP
\fB\-\-explain\fR
Write the expression in a more legible format, useful for debugging complex expressions\.
.
.TP
\fB\-q\fR, \fB\-s\fR, \fB\-\-quiet\fR, \fB\-\-no\-messages\fR
Suppress warnings\.
.
.TP
\fB\-Q\fR, \fB\-\-no\-quiet\fR
Enable warnings\. This is the default\.
.
.TP
\fB\-V\fR, \fB\-\-version\fR
Display version information\.
.
.TP
\fB\-\-verbose\fR
Display normally suppressed output, for debugging purposes\.
.
.SH "EXPRESSIONS"
.
.nf

Regular expressions are expected to be in the Perl/Ruby format\. `perldoc
perlre` has more general information\. The expression may be of either form:

    something
    /something/

There is no difference between the two forms, except that with the latter, one
can provide the "ignore case" modifier, thus matching "someThing" and
"SoMeThInG":

    % glark /something/i

This is redundant with the `\-i` (`\-\-ignore\-case`) option\.

All regular expression characters and options are available, such as "\ew"
and "\.*?"\. For example:

    % glark \'\eb[a\-z][^\ed]\ed{1,3}\.*\es*>>\es*\ed+\es*\.*& +\ed{3}\'

If the `and` and `or` options are not used, the last non\-option is
considered to be the expression to be matched\. In the following, "printf" is
used as the expression\.

    % glark \-w printf *\.c

POSIX character classes (e\.g\., [[:alpha:]]) are also supported\.
.
.fi
.
.SS "COMPLEX EXPRESSIONS"
.
.nf

Complex expressions combine regular expressions (and complex expressions
themselves) with logical AND, OR, and XOR operators\. Both prefix and infix
notations are supported\.
.
.fi
.
.TP
\fB\-a\fR NUM expr1 expr2, \fB\-\-and=NUM\fR expr1 expr2, \fB\-\-end\-of\-and\fR, \fB( expr1 \-\-and NUM expr2 )\fR
Match both of the two expressions, within \fInumber\fR lines of each other\. The forms \fB\-aNUM\fR and \fB\-\-and=NUM\fR are also supported\. In the latter syntax, \fB\-\-end\-of\-and\fR is optional\.
.
.IP
If the number provided is \-1 (negative one), the distance is considered to be "infinite", and thus, the condition is satisfied if both expressions match within the same file\.
.
.IP
If the number provided is 0 (zero), the condition is satisfied if both expressions match on the same line\.
.
.IP
If the \-\-and option is used, and the follow argument is not numeric, then the value defaults to zero\.
.
.IP
A warning will result if the value given in the number position does not appear to be numeric\.
.
.TP
\fB\-o\fR expr1 expr2, \fB\-\-or\fR expr1 expr2 \fB\-\-end\-of\-or\fR, \fB( expr1 \-\-or expr2 )\fR
Match either of the two expressions\. As with the \-\fB\-and\fR option, the two forms are equivalent, and \fB\-\-end\-of\-or\fR is optional\.
.
.TP
\fB\-\-xor\fR expr1 expr2 \fB\-\-end\-of\-xor\fR, \fB( expr1 B<\-\-xor> expr2 )\fR
Match either of the two expressions, but not both\. \fB\-\-end\-of\-xor\fR is optional\.
.
.SS "NEGATED EXPRESSIONS"
.
.nf

Regular expressions can be negated, by being prefixed with \'!\', and using
the \'/\' quote characters around the expression, such as:

    !/this/

This has the effect of "match anything other than `this`"\. For a single
expression, this is no different than the `\-v` (`\-\-invert\-match`) option,
but it can be useful in complex expressions, such as:

    \-\-and 0 this \'!/that/\'

which means "match and line that has "this", but not "that"\.
.
.fi
.
.SH "HIGHLIGHTING"
.
.nf

Matching patterns and file names can be highlighted using ANSI escape
sequences\. Both the foreground and the background colors may be specified,
from the following:

    black
    blue
    cyan
    green
    magenta
    red
    white
    yellow

The foreground may have any number of the following modifiers applied:

    blink
    bold
    concealed
    reverse
    underline
    underscore

The format is "MODIFIERS FOREGROUND on BACKGROUND"\. For example:

    red
    black on yellow                    (the default for patterns)
    reverse bold                       (the default for file names)
    green on white
    bold underline red on cyan

By default text is highlighted as black on yellow\. File names are written in
reversed bold text\.
.
.fi
.
.SH "EXAMPLES"
.
.SS "BASIC USAGE"
.
.TP
\fB% glark format *\.h\fR
Searches for "format" in the local \.h files\.
.
.TP
\fB% glark \-\-ignore\-case format *\.h\fR
Searches for "format" without regard to case\. Short form:
.
.IP
% glark \-i format *\.h
.
.TP
\fB% glark \-\-context=6 format *\.h\fR
Produces 6 lines of context around any match for "format"\. Short forms:
.
.IP
% glark \-C 6 format \fI\.h % glark \-6 format\fR\.h
.
.TP
\fB% glark \-\-exclude\-matching Object *\.java\fR
Find references to "Object", excluding the files whose names match "Object"\. Thus, SessionBean\.java would be searched; EJBObject\.java would not\. Short form:
.
.IP
% glark \-M Object *\.java
.
.TP
\fB% glark \-\-grep \-\-extract\-matches \'(\ew+)\e\.printStackTrace\e(\.*\e)\' *\.java\fR
Show only the variable name of exceptions that are dumped\. Short form:
.
.IP
% glark \-gy \'(\ew+)\.printStackTrace(\.\fI)\'\fR\.java
.
.TP
\fB% who| glark \-gy \'^(\eS+)\es+\eS+\es*May 15\'\fR
Display only the names of users who logged in today\.
.
.TP
\fB% glark \-l \'\eb\ew{25,}\eb\' *\.txt\fR
Display (only) the names of the text files that contain "words" at least 25 characters long\.
.
.TP
\fB% glark \-\-files\-without\-match \'"\ew+"\'\fR
Display (only) the names of the files that do not contain strings consisting of a single word\. Short form:
.
.IP
% glark \-L \'"\ew+"\'
.
.TP
\fB% for i in *\.jar; do jar tvf $i | glark \-\-LABEL=$i Exception; done\fR
Search the files for \'Exception\', displaying the jar file name instead of the standard input marker (\'\-\')\.
.
.TP
\fB% glark \-\-text\-color "red on white" \'\eb[[:digit:]]{5}\eb\' *\.c\fR
Display (in red text on a white background) occurrences of exactly 5 digits\. Short form:
.
.IP
% glark \-T "red on white" \'\eb\ed{5}\eb\' *\.c
.
.IP
See the HIGHLIGHTING section for valid colors and modifiers\.
.
.SS "COMPLEX EXPRESSIONS"
.
.TP
\fB% glark \-\-or format print *\.h"\fR
Searches for either "printf" or "format"\. Short form:
.
.IP
% glark \-o format print *\.h
.
.TP
\fB% glark \-\-and 4 printf format *\.c *\.h\fR
Searches for both "printf" or "format" within 4 lines of each other\. Short form:
.
.IP
% glark \-a 4 printf format \fI\.c\fR\.h
.
.TP
\fB% glark \-\-context=3 \-\-and 0 printf format *\.c"\fR
Searches for both "printf" or "format" on the same line ("within 0 lines of each other")\. Three lines of context are displayed around any matches\. Short form:
.
.IP
% glark \-3 \-a 0 printf format *\.c
.
.TP
\fB% glark \-8 \-i \-a 15 \-a 2 pthx \'\e\.\e\.\e\.\' \-o \'va_\ew+t\' die *\.c\fR
(In order of the options:) Produces 8 lines of context around case insensitive matches of ("phtx" within 2 lines of \'\.\.\.\' (literal)) within 15 lines of (either "va_\ew+t" or "die")\.
.
.TP
\fB% glark \-\-and \-1 \'#define\es+YIELD\' \'#define\es+dTHR\' *\.h\fR
Looks for "#define\es+YIELD" within the same file (\-1 == "infinite distance") of "#define\es+dTHR"\. Short form:
.
.IP
% glark \-a \-1 \'#define\es+YIELD\' \'#define\es+dTHR\' *\.h
.
.SS "RANGE LIMITING"
.
.TP
\fB% glark \-\-before 50% cout *\.cpp\fR
Find references to "cout", within the first half of the file\. Short form:
.
.IP
% glark \-b 50% cout *\.cpp
.
.TP
\fB% glark \-\-after 20 cout *\.cpp\fR
Find references to "cout", starting at the 20th line in the file\. Short form:
.
.IP
% glark \-b 50% cout *\.cpp
.
.TP
\fB% glark \-\-range 20,50% cout *\.cpp\fR
Find references to "cout", in the first half of the file, after the 20th line\. Short form:
.
.IP
% glark \-R 20,50% cout *\.cpp
.
.SS "FILE PROCESSING"
.
.TP
\fB% glark \-r print \.\fR
Search for "print" in all files at and below the current directory\.
.
.TP
\fB% glark \-\-fullname=\'/\e\.java$/\' \-r println org\fR
Search for "println" in all Java files at and below the "org" directory\.
.
.TP
\fB% glark \-\-basename=\'!/CVS/\' \-r \'\eb\ed\ed:\ed\ed:\ed\ed\eb\' \.\fR
Search for a time pattern in all files without "CVS" in their basenames\.
.
.TP
\fB% glark \-\-size\-limit=1024 \-r main \-r \.\fR
Search for "main" in files no larger than 1024 bytes\.
.
.SH "ENVIRONMENT"
.
.TP
\fBGLARKOPTS\fR
A string of whitespace\-delimited options\. Because of parsing constraints, should probably not contain complex regular expressions\.
.
.TP
\fB$HOME/\.glarkrc\fR
A resource file, containing name/value pairs, separated by either \':\' or \'=\'\. The valid fields of a \.glarkrc file are as follows, with example values:
.
.IP "" 4
.
.nf

after\-context:     1
before\-context:    6
context:           5
file\-color:        blue on yellow
highlight:         off
ignore\-case:       false
quiet:             yes
text\-color:        bold reverse
line\-number\-color: bold
verbose:           false
grep:              true
.
.fi
.
.IP "" 0
.
.IP
"yes" and "on" are synonymnous with "true"\. "no" and "off" signify "false"\.
.
.IP
My ~/\.glarkrc file contains:
.
.IP "" 4
.
.nf

context: 3
quiet: true
.
.fi
.
.IP "" 0

.
.TP
\fB/path/\.\.\./\.glarkrc\fR
See the \fBlocal\-config\-files\fR field below\.
.
.SS "FIELDS"
.
.TP
\fBafter\-context\fR
See the \fB\-\-after\-context\fR option\. For example, for 3 lines of context after the match:
.
.IP "" 4
.
.nf

after\-context: 3
.
.fi
.
.IP "" 0

.
.TP
\fBbasename\fR
See the \fB\-\-basename\fR option\. For example, to omit Subversion directories:
.
.IP "" 4
.
.nf

basename: !/\e\.svn/
.
.fi
.
.IP "" 0

.
.TP
\fBbefore\-context\fR
See the \fB\-\-before\-context\fR option\. For example, for 7 lines of context before the match:
.
.IP "" 4
.
.nf

before\-context: 7
.
.fi
.
.IP "" 0

.
.TP
\fBbinary\-files\fR
See the \fB\-\-binary\-files\fR option\. For example, to skip binary files:
.
.IP "" 4
.
.nf

binary\-files: without\-match
.
.fi
.
.IP "" 0

.
.TP
\fBcontext\fR
See the \fB\-\-context\fR option\. For example, for 2 lines before and after matches:
.
.IP "" 4
.
.nf

context: 2
.
.fi
.
.IP "" 0

.
.TP
\fBexpression\fR
See the \fBEXPRESSION\fR section\. Example:
.
.IP "" 4
.
.nf

expression: \-\-or \'^\es*public\es+class\es+\ew+\' \'^\es*\ew+\e(
.
.fi
.
.IP "" 0

.
.TP
\fBfile\-color\fR
See the \fB\-\-file\-color\fR option\. For example, for white on black:
.
.IP "" 4
.
.nf

file\-color: white on black
.
.fi
.
.IP "" 0

.
.TP
\fBfilter\fR
See the \fB\-\-filter\fR option\. For example, to show the entire file:
.
.IP "" 4
.
.nf

filter: false
.
.fi
.
.IP "" 0

.
.TP
\fBfullname\fR
See the \fB\-\-fullname\fR and \fB\-\-basename\fR options\. For example, to omit CVS files:
.
.IP "" 4
.
.nf

fullname: !/\ebCVS\eb/
.
.fi
.
.IP "" 0

.
.TP
\fBgrep\fR
See the \fB\-\-grep\fR option\. For example, to always run in grep mode:
.
.IP "" 4
.
.nf

grep: true
.
.fi
.
.IP "" 0

.
.TP
\fBhighlight\fR
See the \fB\-\-highlight\fR option\. To turn off highlighting:
.
.IP "" 4
.
.nf

highlight: false
.
.fi
.
.IP "" 0

.
.TP
\fBignore\-case\fR
See the \fB\-\-ignore\-case\fR option\. To make matching case\-insensitive:
.
.IP "" 4
.
.nf

ignore\-case: true
.
.fi
.
.IP "" 0

.
.TP
\fBknown\-nontext\-files\fR
The extensions of files that should be considered to always be nontext (binary)\. If a file extension is not known, the file contents are examined for nontext characters\. Thus, setting this field can result in faster searches\. Example:
.
.IP "" 4
.
.nf

known\-nontext\-files: class exe dll com
.
.fi
.
.IP "" 0
.
.IP
See the \fBExclusion of Non\-Text Files\fR section in \fBNOTES\fR for the default settings\.
.
.TP
\fBknown\-text\-files\fR
The extensions of files that should be considered to always be text\. See above for more\. Example:
.
.IP "" 4
.
.nf

known\-text\-files: ini bat xsl xml
.
.fi
.
.IP "" 0
.
.IP
See the \fBExclusion of Non\-Text Files\fR section in \fBNOTES\fR for the default settings\.
.
.TP
\fBlocal\-config\-files\fR
By default, glark uses only the configuration file ~/\.glarkrc\. Enabling this makes glark search upward from the current directory for the first \.glarkrc file\.
.
.IP
This can be used, for example, in a Java project, where \.class files are binary, versus a PHP project, where \.class files are text:
.
.IP "" 4
.
.nf

/home/me/\.glarkrc

    local\-config\-files: true

/home/me/projects/java/\.glarkrc

    known\-nontext\-files: class

/home/me/projects/php/\.glarkrc

    known\-text\-files: class
.
.fi
.
.IP "" 0
.
.IP
With this configuration, \.class files will automatically be treated as binary file in Java projects, and \.class files will be treated as text\. This can speed up searches\.
.
.IP
Note that the configuration file ~/\.glarkrc is read first, so the local configuration file can override those settings\.
.
.TP
\fBquiet\fR
See the \fB\-\-quiet\fR option\.
.
.TP
\fBshow\-break\fR
Whether to display breaks between sections, when displaying context\. Example:
.
.IP "" 4
.
.nf

show\-break: true
.
.fi
.
.IP "" 0
.
.IP
By default, this is false\.
.
.TP
\fBtext\-color\fR
See the \fB\-\-text\-color\fR option\. Example:
.
.IP "" 4
.
.nf

text\-color: bold blue on white
.
.fi
.
.IP "" 0

.
.TP
\fBverbose\fR
See the \fB\-\-verbose\fR option\. Example:
.
.IP "" 4
.
.nf

verbose: true
.
.fi
.
.IP "" 0

.
.SS "Exclusion of Non\-Text Files"
Non\-text files are automatically skipped, by taking a sample of the file and checking for an excessive number of non\-ASCII characters\. For speed purposes, this test is skipped for files whose suffixes are associated with text files:
.
.IP "" 4
.
.nf

    c
    cpp
    css
    h
    f
    for
    fpp
    hpp
    html
    java
    mk
    php
    pl
    pm
    rb
    rbw
    txt
.
.fi
.
.IP "" 0
.
.P
Similarly, this test is also skipped for files whose suffixes are associated with non\-text (binary) files:
.
.IP "" 4
.
.nf

    Z
    a
    bz2
    elc
    gif
    gz
    jar
    jpeg
    jpg
    o
    obj
    pdf
    png
    ps
    tar
    zip
.
.fi
.
.IP "" 0
.
.P
See the \fBknown\-text\-files\fR and \fBknown\-nontext\-files\fR fields for denoting file name suffixes to associate as text or nontext\.
.
.SS "Exit Status"
The exit status is 0 if matches were found; 1 if no matches were found, and 2 if there was an error\. An inverted match (the \-v/\-\-invert\-match option) will result in 1 for matches found, 0 for none found\.
.
.SH "SEE ALSO"
For regular expressions, the \fBperlre\fR man page\.
.
.P
Mastering Regular Expressions, by Jeffrey Friedl, published by O\'Reilly\.
.
.SH "CAVEATS"
"Unbalanced" leading and trailing slashes will result in those slashes being included as characters in the regular expression\. Thus, the following pairs are equivalent:
.
.IP "" 4
.
.nf

/foo        "/foo"
/foo\e/      "/foo/"
/foo\e/i     "/foo/i"
foo/        "foo/"
foo/        "foo/"
.
.fi
.
.IP "" 0
.
.P
The code to detect nontext files assumes ASCII, not Unicode\.
.
.SH "AUTHOR"
Jeff Pace (jeugenepace at gmail dot com)
.
.P
www\.incava\.org/projects/glark
.
.P
https://github\.com/jeugenepace/glark
.
.SH "COPYRIGHT"
Copyright (c) 2006\-2012, Jeff Pace\.
.
.P
All Rights Reserved\. This module is free software\. It may be used, redistributed and/or modified under the terms of the Lesser GNU Public License\. See http://www\.gnu\.org/licenses/lgpl\.html for more information\.
